// Code generated by protoc-gen-go.
// source: Message.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	Message.proto

It has these top-level messages:
	CalcReq
	Int32Ans
	Int64Ans
	Float32Ans
	Float64Ans
	CalcRes
	Message
*/
package protos

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type CalculateTypes int32

const (
	CalculateTypes_INTEGER32 CalculateTypes = 0
	CalculateTypes_INTEGER64 CalculateTypes = 1
	CalculateTypes_FLOAT32   CalculateTypes = 2
	CalculateTypes_FLOAT64   CalculateTypes = 3
)

var CalculateTypes_name = map[int32]string{
	0: "INTEGER32",
	1: "INTEGER64",
	2: "FLOAT32",
	3: "FLOAT64",
}
var CalculateTypes_value = map[string]int32{
	"INTEGER32": 0,
	"INTEGER64": 1,
	"FLOAT32":   2,
	"FLOAT64":   3,
}

func (x CalculateTypes) String() string {
	return proto.EnumName(CalculateTypes_name, int32(x))
}

type CalcRes_CalcStatus int32

const (
	CalcRes_OK    CalcRes_CalcStatus = 0
	CalcRes_ERROR CalcRes_CalcStatus = 1
)

var CalcRes_CalcStatus_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var CalcRes_CalcStatus_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x CalcRes_CalcStatus) String() string {
	return proto.EnumName(CalcRes_CalcStatus_name, int32(x))
}

type Message_MessageType int32

const (
	Message_REGISTER_REQ  Message_MessageType = 0
	Message_REGISTER_RES  Message_MessageType = 1
	Message_HEARTBEAT_REQ Message_MessageType = 2
	Message_HEARTBEAT_RES Message_MessageType = 3
	Message_QUERY_REQ     Message_MessageType = 4
	Message_QUERY_RES     Message_MessageType = 5
	Message_CALCULATE_REQ Message_MessageType = 6
	Message_CALCULATE_RES Message_MessageType = 7
)

var Message_MessageType_name = map[int32]string{
	0: "REGISTER_REQ",
	1: "REGISTER_RES",
	2: "HEARTBEAT_REQ",
	3: "HEARTBEAT_RES",
	4: "QUERY_REQ",
	5: "QUERY_RES",
	6: "CALCULATE_REQ",
	7: "CALCULATE_RES",
}
var Message_MessageType_value = map[string]int32{
	"REGISTER_REQ":  0,
	"REGISTER_RES":  1,
	"HEARTBEAT_REQ": 2,
	"HEARTBEAT_RES": 3,
	"QUERY_REQ":     4,
	"QUERY_RES":     5,
	"CALCULATE_REQ": 6,
	"CALCULATE_RES": 7,
}

func (x Message_MessageType) String() string {
	return proto.EnumName(Message_MessageType_name, int32(x))
}

type CalcReq struct {
	Type       CalculateTypes `protobuf:"varint,1,opt,enum=pb.CalculateTypes" json:"Type,omitempty"`
	Int32Op1   int32          `protobuf:"varint,3,opt,name=int32op1" json:"int32op1,omitempty"`
	Int64Op1   int64          `protobuf:"varint,4,opt,name=int64op1" json:"int64op1,omitempty"`
	Float32Op1 float32        `protobuf:"fixed32,5,opt,name=float32op1" json:"float32op1,omitempty"`
	Float64Op1 float64        `protobuf:"fixed64,6,opt,name=float64op1" json:"float64op1,omitempty"`
	Int32Op2   int32          `protobuf:"varint,7,opt,name=int32op2" json:"int32op2,omitempty"`
	Int64Op2   int64          `protobuf:"varint,8,opt,name=int64op2" json:"int64op2,omitempty"`
	Float32Op2 float32        `protobuf:"fixed32,9,opt,name=float32op2" json:"float32op2,omitempty"`
	Float64Op2 float64        `protobuf:"fixed64,10,opt,name=float64op2" json:"float64op2,omitempty"`
}

func (m *CalcReq) Reset()         { *m = CalcReq{} }
func (m *CalcReq) String() string { return proto.CompactTextString(m) }
func (*CalcReq) ProtoMessage()    {}

// 定义四种返回值类型字段
type Int32Ans struct {
	AddInt32 int32 `protobuf:"zigzag32,1,opt" json:"AddInt32,omitempty"`
	MinInt32 int32 `protobuf:"zigzag32,2,opt" json:"MinInt32,omitempty"`
	MulInt32 int32 `protobuf:"zigzag32,3,opt" json:"MulInt32,omitempty"`
	DivInt32 int32 `protobuf:"zigzag32,4,opt" json:"DivInt32,omitempty"`
}

func (m *Int32Ans) Reset()         { *m = Int32Ans{} }
func (m *Int32Ans) String() string { return proto.CompactTextString(m) }
func (*Int32Ans) ProtoMessage()    {}

type Int64Ans struct {
	AddInt64 int64 `protobuf:"zigzag64,1,opt" json:"AddInt64,omitempty"`
	MinInt64 int64 `protobuf:"zigzag64,2,opt" json:"MinInt64,omitempty"`
	MulInt64 int64 `protobuf:"zigzag64,3,opt" json:"MulInt64,omitempty"`
	DivInt64 int64 `protobuf:"zigzag64,4,opt" json:"DivInt64,omitempty"`
}

func (m *Int64Ans) Reset()         { *m = Int64Ans{} }
func (m *Int64Ans) String() string { return proto.CompactTextString(m) }
func (*Int64Ans) ProtoMessage()    {}

type Float32Ans struct {
	AddFloat32 float32 `protobuf:"fixed32,1,opt" json:"AddFloat32,omitempty"`
	MinFloat32 float32 `protobuf:"fixed32,2,opt" json:"MinFloat32,omitempty"`
	MulFloat32 float32 `protobuf:"fixed32,3,opt" json:"MulFloat32,omitempty"`
	DivFloat32 float32 `protobuf:"fixed32,4,opt" json:"DivFloat32,omitempty"`
}

func (m *Float32Ans) Reset()         { *m = Float32Ans{} }
func (m *Float32Ans) String() string { return proto.CompactTextString(m) }
func (*Float32Ans) ProtoMessage()    {}

type Float64Ans struct {
	AddFloat64 float64 `protobuf:"fixed64,1,opt" json:"AddFloat64,omitempty"`
	MinFloat64 float64 `protobuf:"fixed64,2,opt" json:"MinFloat64,omitempty"`
	MulFloat64 float64 `protobuf:"fixed64,3,opt" json:"MulFloat64,omitempty"`
	DivFloat64 float64 `protobuf:"fixed64,4,opt" json:"DivFloat64,omitempty"`
}

func (m *Float64Ans) Reset()         { *m = Float64Ans{} }
func (m *Float64Ans) String() string { return proto.CompactTextString(m) }
func (*Float64Ans) ProtoMessage()    {}

type CalcRes struct {
	Type       CalculateTypes     `protobuf:"varint,1,opt,enum=pb.CalculateTypes" json:"Type,omitempty"`
	Status     CalcRes_CalcStatus `protobuf:"varint,2,opt,enum=pb.CalcRes_CalcStatus" json:"Status,omitempty"`
	Int32Ans   *Int32Ans          `protobuf:"bytes,3,opt,name=int32ans" json:"int32ans,omitempty"`
	Int64Ans   *Int64Ans          `protobuf:"bytes,4,opt,name=int64ans" json:"int64ans,omitempty"`
	Float32Ans *Float32Ans        `protobuf:"bytes,5,opt,name=float32ans" json:"float32ans,omitempty"`
	Float64Ans *Float64Ans        `protobuf:"bytes,6,opt,name=float64ans" json:"float64ans,omitempty"`
}

func (m *CalcRes) Reset()         { *m = CalcRes{} }
func (m *CalcRes) String() string { return proto.CompactTextString(m) }
func (*CalcRes) ProtoMessage()    {}

func (m *CalcRes) GetInt32Ans() *Int32Ans {
	if m != nil {
		return m.Int32Ans
	}
	return nil
}

func (m *CalcRes) GetInt64Ans() *Int64Ans {
	if m != nil {
		return m.Int64Ans
	}
	return nil
}

func (m *CalcRes) GetFloat32Ans() *Float32Ans {
	if m != nil {
		return m.Float32Ans
	}
	return nil
}

func (m *CalcRes) GetFloat64Ans() *Float64Ans {
	if m != nil {
		return m.Float64Ans
	}
	return nil
}

type Message struct {
	MsgType Message_MessageType `protobuf:"varint,1,opt,name=msgType,enum=pb.Message_MessageType" json:"msgType,omitempty"`
	// 可能返回的关于worker的socket信息
	Seq    int32  `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Socket string `protobuf:"bytes,3,opt,name=socket" json:"socket,omitempty"`
	// 注意这个socket复用了，在worker向master注册时用于表示自己的端口号，在client查询时，master返回的是worker的IP：Port
	Calcreq *CalcReq `protobuf:"bytes,4,opt,name=calcreq" json:"calcreq,omitempty"`
	Calcres *CalcRes `protobuf:"bytes,5,opt,name=calcres" json:"calcres,omitempty"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}

func (m *Message) GetCalcreq() *CalcReq {
	if m != nil {
		return m.Calcreq
	}
	return nil
}

func (m *Message) GetCalcres() *CalcRes {
	if m != nil {
		return m.Calcres
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.CalculateTypes", CalculateTypes_name, CalculateTypes_value)
	proto.RegisterEnum("pb.CalcRes_CalcStatus", CalcRes_CalcStatus_name, CalcRes_CalcStatus_value)
	proto.RegisterEnum("pb.Message_MessageType", Message_MessageType_name, Message_MessageType_value)
}
